\chapter{Coded CDMA Transmission Block}

In this chapter we see the schematic structure of the coded CDMA of the
transmission side. We will study each block in a detail in terms of the
principles and the design, there by it helps up us to understand the basic
motivation and the requirements to recover the data in the receiver side.

\section{Information Bits}

Users which are active to participate the in the communication is
responsible for the Information Bits, which are of either voice or data.
Since, we are not dealing with source coding and the assumption is made
that information generated by the users are undergone source coding and
what it delivers at the end is of binary data with 1's and 0's. Hence, we
assume that user data is always binary at-least for our case. We must imply
certain statistics for the bits generated by the user. The bit-streams
generated by the users are equiv-probable, means that bits are independent,
equally likely to be 1 or 0.

\section{Coding}

The Information Bits cannot be transmitted as it is, since the
air-interface is uncontrollable, these bit-streams can be pron to error.
So, it is highly demand-able to code these bits to protect from the error.
For our work we use convolutional codes to encode the information bits.

\subsection{Convolutional Codes}

Convolutional codes are generated by passing the information bits through a
linear-finite-state shift register. The shift registers are organized in a
way that it has a length of $K$ stages and $n$ linear algebraic function
generators as shown in figure x.x. The input to the en-coder which is built
with shift-registers are binary which are the Information Bits. These bits
are shifted into and along the the shift-register $k$ bits at a time. The
number of output bits for the $k$ input bits is equal to $n$, hence
constitute an important parameters in the coding terminology is the code
rate $R$, where $R\;=\;k/n$. The term which is undefined till now is $K$,
which is called the \textit{constraint length} of the convolutional code.
\\

\begin{figure}[htb]
  \centerline{ \bildsc{ps/f1_2_1_conv_enc.eps}{0.8} }
  \caption{Multiple-Access Communication}
%  \label{Multiple-Access\\ Communication}
\end{figure}

Next, we specify the generator matrix of the convolutional codes. By theory
the generator matrix for convolutional codes are semi-infinite because the
information sequence is of semi-infinite in length. But, there is an
alternate method to specify the generator matrix. We represent the
information bits as the set of $n$ vectors, and one vector is assigned for
each of the $n$ modulo-2 adder. Every vector has dimensions $Kk$ contains
the connection to the encoder and to the modulo-2 adder.\\

\begin{figure}[htb]
  \centerline{ \bildsc{ps/f1_2_1_shift_reg.eps}{0.5} }
  \caption{Multiple-Access Communication}
%  \label{Multiple-Access\\ Communication}
\end{figure}

Let us consider an example for convolutional encoders with constraint
length $K=3$, $k=1$ and $n=2$, which is shown in the figure x.x. Initially
the shift-register is set to all-zero state. Now, we pass the input as 1,
and for the input 1 the generated output as 11. If the second bit is 0,
then the output generated by the shift-register together with modulo-2
adders as 01. Suppose, for the third bit if we pass 1 then we get 00 as the
output of the function generators. Given the generator
$\mathrm{g}_1\;=\;[101]$ and $\mathrm{g}_2\;=\;[111]$, with this the
function generators can be built as shown in figure x.x. With those
structure the bits are encoded and passed to the modulator.

\section{Digital Modulation}

In the transmission of information sequence over a communication channel,
the modulator acts as an interfacing device that maps the digital
information into signal waveforms that matches the characteristics of the
channel. Mapping is generally performed by taking blocks of
$k=\mathrm{log_2}M$ binary digits at a time from the information sequence
$\{a_n\}$ and selecting one of $M=2^k$ deterministic finite energy
waveforms $\{s_m(t),M=1,2,\cdots,M\}$ for transmission over the channel.
\\

These waveforms may differ either in amplitude or in phase or in frequency
or with some combination of two or more signal parameters.

\subsection{Phase-modulated signals}
In phase modulation, the signals waveforms are represented as

\begin{eqnarray}
\begin{array}{lll}
s_m(t)&=&\mathrm{Re}[g(t)e^{j2\pi
(m-1)/M}e^{j2f_ct}],\hspace{5mm}m=1,2,\cdots,M.\hspace{3mm}0\leq t \leq T
\\ \\
&=&g(t)\mathrm{cos}\left [2\pi f_c t+\frac{\hbox{$2\pi$}}{\hbox{$M$}}(m-1)\right ] \\ \\
&=&g(t)\,\mathrm{cos}\frac{\hbox{$2\pi$}}{\hbox{$M$}}(m-1)\,\mathrm{cos}2\pi
f_c t -
g(t)\,\mathrm{sin}\frac{\hbox{$2\pi$}}{\hbox{$M$}}(m-1)\,\mathrm{sin}2\pi
f_c t
\end{array}
\end{eqnarray}

where $g(t)$ is the signal pulse shape and
$\theta_m\;=\;2\pi(m-1)/M,\;m=1,2,\cdots,M$, are the $M$ possible phases of
the carrier that convey the transmitted information. \\

Digital phase modulation is usually called \textit{phase-shift keying}(PSK). \\

Further, the phase-shift keying can also be represented as a linear
combination of two orthonormal waveforms, $f_1(t)$ and $f_2(t)$, i.e.,

\begin{equation}
s_m(t)=s_{m1}f_1(t)+s_{m2}f_2(t)
\end{equation}

where

\begin{equation}
f_1(t)=\sqrt{\frac{\hbox{$2$}}{\hbox{$\mathcal{E}_g$}}}g(t)\,\mathrm{cos}2\pi
f_c t
\end{equation}

\begin{equation}
f_2(t)=-\sqrt{\frac{\hbox{$2$}}{\hbox{$\mathcal{E}_g$}}}g(t)\,\mathrm{sin}2\pi
f_c t
\end{equation}

and the two-dimensional vectors $\mathrm{s}_m\;=\;[s_{m1}\;\;s_{m2}]$ are
give by

\begin{equation}
\mathrm{s}_m=\left [
\sqrt{\frac{\hbox{$\mathcal{E}_g$}}{\hbox{$2$}}}\;\mathrm{cos}
\frac{\hbox{$2\pi$}}{\hbox{$M$}}(m-1)\hspace{2.5mm}\sqrt{\frac{\hbox{$\mathcal{E}_g$}}{\hbox{$2$}}}\;\mathrm{sin}\frac{\hbox{$2\pi$}}{\hbox{$M$}}(m-1)
\right ],\hspace{5mm} m=1,2,\cdots,M
\end{equation}
Signal space diagrams for $M\;=\;$2,4 and 8 are shown in the figure x.x \\

\begin{figure}[htb]
  \centerline{ \bildsc{ps/f1_3_1_modulation.eps}{0.8} }
  \caption{Multiple-Access Communication}
%  \label{Multiple-Access\\ Communication}
\end{figure}

The Euclidean distance between signal point is

\begin{eqnarray}
\begin{array}{lll}
d_m^{(e)}&=&\vert \vert s_m - s_n \vert \vert \\ \\
&=&\left \{\mathcal{E}_g\left [1-\mathrm{cos}\frac{\hbox{$2\pi
$}}{\hbox{$M$}}(m-n)\right ] \right \}^{1/2}
\end{array}
\end{eqnarray}

The minimum Euclidean distance corresponds to the case in which \\$\vert
m-n\vert \;=\;1$, then

\begin{equation}
d_{min}^{(e)}=\sqrt{\mathcal{E}_g\left(1-\mathrm{cos}\frac{\hbox{$2\pi$}}{\hbox{$M$}}
\right )}
\end{equation}
\section{Interleaving}
As it is known that coding on information bits are done to protect from the
errors incurred by the channel during the transmission. There by the
information bits are conveyed to the destined receivers with very high
reliability. This is particularly true when the channel is AWGN channel.
However, there exist certain channels that incur bursty errors on the coded
bits, this nature is particularly complicated because it can corrupt the
sequence of bits which is impossible to recover. This nature of bursty
errors are seen in the channels characterized by the multipath and fading.
Fading of the signals normally arises due to time-variant multipath
propagation which causes the signal power to fall below the noise levels,
that results in a large number of errors. \\

Error such as above cannot be corrected by the codes, since it is designed
to correct the errors which are statistically independent. Of-course there
are codes which are employed to correct the burst errors. Nevertheless, we
concentrate on effective method to deal with burty errors is called
interleaving. \\

When a channel exhibit the burst nature of errors then, we permute the
coded bits in way that burst errors are transformed into channel having
independent errors. Simple interleaving procedure in \textit{block
interleaving} though we are not employing this scheme in our work but we
take the \textit{block interleaving} because of brevity in understanding
how interleavers work. This class of interleavers are more suitable when we
employ the block codes. Other class of interleavers which is more suitable
for convolutional codes is called \textit{convolutional interleaver}. \\
\begin{figure}[htb]
  \centerline{ \bildsc{ps/f_1_4_interleave.eps}{0.8} }
  \caption{Multiple-Access Communication}
%  \label{Multiple-Access\\ Communication}
\end{figure}
A \textit{block interleaver} formats the encoded bits in a rectangular
array of \textit{m} row and \textit{n} columns. Since it takes the coded
bits as an input, the row in the rectangular array run up to the length of
the codeword. An \textit{interleaver of degree m} consist of \textit{m}
rows which corresponds to \textit{m} codewords of length \textit{n}.
Interleavers of this kind stores the coded bits in the column of the
rectangular array of all the codes words \textit{m} of length \textit{n}.
Now the bits are read out column-wise and transmitted over the channel.
Simply, it read-in in row-wise and read-out in column wise there by
information bits can is distributed and any burst errors over the channel
has least effect on the information bits. \\

Now we see for a give (\textit{n,k}) code and ask a question what length of
burst error can be handled ?

A burst of length \textit{l = mb} is partition into \textit{m} bursts of
length \textit{b}. Thus \textit{n,k} code can handle burst errors of length
$b\leq \lfloor \frac{1}{2}(n-k)\rfloor$ when combined with the interleavers
of degree \textit{m} to get interleaved \textit{(mn,mk)} block code to
handle bursts of length \textit{mb}. \\

We select \textit{random interleavers} because of inherit advantages.

\section{Spreading}
Spread spectrum signals used for transmission in digital communication has
a unique feature that the bandwidth \textit{W} is much greater then the
information rate \textit{R} in bits/s. Then we can define a factor that how
much the bandwidth is expanded as the ratio between the bandwidth and the
information rate and it is termed as $B_e=W/R$, and this ratio is much
greater then the unity for the spread spectrum signals. As we seen that
large redundancy is inherit in spread spectrum signals to overcome the
effects such as interference in the mobile radio environments. As we know
coding, adds certain amount of redundancy and it is seen that bandwidth
expansion factor $B_e > 1$ which makes an important entity in design of
spread spectrum signals.\\

The next important element in the design of spread spectrum signals is
pseudorandomness, which has unique property that makes the signals appear
like a random noise there by it is difficult to demodulate by unintended
user. \\

These two elements are the ideal requirements in the mobile communication
scenario, where several users share the common medium and take part in
simultaneous communication. Spreading and pseudorandomness ensures that no
users interfere with each other and reliable communication between two
intended users. \\

We list out where the spread spectrum signals are used,

\begin{itemize}

\item Combating or suppressing the interference arise from the users who
share the common channel, and also the self-interference caused by the
multi-path propagation.
\item By spreading, the signal of the user is kept below the noise levels,
there by unintended users cannot listen to them. This is high requirement
in military applications.
\item By spreading message privacy is achieved despite the presence of
other users who operate in the same frequency band.
\end{itemize}

We explain how spreading will do the above enlisted functions.
In a mobile radio environment at a given time if not all at-least some
users take part in communication by sharing the common medium. Imagine that
all the active users used the same code for encoding and decoding the
information then it is highly possible that these users can interfere with
each other. At this juncture we introduce a pseudo-random \textit{code}
which is unique for every users then all users sharing the same common
medium can transmit without interfering with each other. At the receiver
the intended users apply these \textit{codes} to demodulate the data. This
type of communication technique, which allows multiple users to
simultaneously use a common channel for transmission of information is
called \textit{Code Division Multiple Access}.\\

In mobile radio environments signals take multiple paths before it reaches
to the receiver. Multi-paths results in time-dispersive propagation through
the channel and it is viewed as self-interference. The introduction of
pseudo-randomness in the transmission can combat this kind of interference.

\section{Types of Spread Spectrum}
In this section we will describe types of spread spectrum signals, with
their characteristics and the applications. \\

In general two types of modulation are considered: PSK and FSK. PSK is best
suited where the phase synchronization between the transmitted signals and
received signals over a time interval that is relatively long compared to
the reciprocal of the transmitted signal bandwidth. \\

On the other hand, FSK is most suited where the phase coherence cannot be
maintained due to time-variant effects on the communications link.

\subsection{Direct Sequence Spread Spectrum}
The PN sequence generated at the modulator is used in conjunction with the
PSK modulation to shift the phase of the signals in a pseudorandom fashion.
The resultant modulated signal is called the \textit{Direct Sequence} (DS)
or a \textit{pseudo-random} (PN) spread spectrum signals.

\subsection{Frequency Hopped Spread Spectrum}
When no phase synchronization can be maintained between the signals of Tx
and Rx, we choose FSK modulation. When PN sequence generated in conjunction
with the FSK modulation to choose the frequency of the signals in a
pseudorandom fashion, then the resulting modulated signal is called
\textit{Frequency-Hopped} (FH) spread spectrum signal.\\

We consider the synchronous CDMA, therefore we employ \textit{Direct
Sequence} spread spectrum techniques. Hence, we study in detail about the
DS-spread spectrum techniques.

\section{Direct Sequence Spread Spectrum Signals}
In our model shown in Figure x.x, the information sequence are coded at a
rate \textit{R} bits/s by a (\textit{n,k}) code, with the channel bandwidth
\textit{W} Hz. We assume the modulation as BPSK. The channel bandwidth is
utilized in a efficient way by shifting the phase of the carried in a
pseudorandomly according to the pattern of the PN sequence at a rate
\textit{W} times/s. The reciprocal of \textit{W}, denoted as $T_c$ which is
the duration of the pulse commonly called as \textit{chip} and $T_c$ as
\textit{chip interval}. This constitutes the basic element in the DS spread
spectrum signal. \\
\begin{figure}[htb]
  \centerline{ \bildsc{ps/f_1_7_ds.eps}{0.8} }
  \caption{Multiple-Access Communication}
%  \label{Multiple-Access\\ Communication}
\end{figure}
Bandwith expansion factor was introduced as the ration between the
bandwidth of the signal \textit{W} to the rate \textit{R} of the
information signals. We express in terms of the duration of bit to the
duration of the chip, as $T_b=1/R$ and $T_c=1/W$. Then the bandwidth
expansion factor $W/R$ can be expressed as

\begin{equation}
B_e\;=\;\frac{\hbox{$W$}}{\hbox{$R$}}\;=\;\frac{\hbox{$T_b$}}{\hbox{$T_c$}}
\end{equation}

Bandwidth expansion factor is also called as \textit{Spreading Factor}.
From now we call bandwidth expansion factor as Spreading Factor.\\

In most of the practical systems, the spreading factor is an integer.

\begin{equation}
L_c=\frac{\hbox{$T_b$}}{\hbox{$T_c$}}
\end{equation}

which is the number of chips contain in one information bit. Otherwise, the
number of phase shifts that can occur in the transmitted signal during the
bit duration $T_b=1/R$. Figure x.x illustrates the modulation between the
PN sequence and the information bit. \\

We assume that PN generator generates the PN sequences in certain way and
we concentrate on how it is modulated with the coded sequence.

\section{Modulation}
There are two methods to impress the PN sequence on the transmitting
signal. One method is to perform the modulo-2 addition on the PN sequence
and the coded bits. Mathematically, $b_i$ represents the $i^{\mathrm{th}}$
bit of the PN sequence and $c_i$ is the corresponding bit from the encoder
then the modulo sum is

\begin{equation}
a_i = b_i \oplus c_i
\end{equation}

From the below lookup table $a_i=1$ when $b_i=1$ and $c_i=0$ or $b_i=0$
also $a_i=0$ when $b_i=1\; \mathrm{and}\;c_i=1$ or
$b_i=0\;\mathrm{and}\;c_i=0$. \\

The sequence $\{a_i\}$ is mapped into a BPSK signal which has the form
$s(t)\;=\;\pm \mathrm{Re}\left [ g(t)e^{j2\pi f_c t} \right ]$ as follows

\begin{eqnarray}
g_i(t)=\left \{
\begin{array}{rll}
g(t-iT_c)&&(a_i=0)\\ \\
-g(t-iT_c)&&(a_i=1)
\end{array}
\right .
\end{eqnarray}

where $g(t)$ represents a pulse of duration $T_c$ seconds.
